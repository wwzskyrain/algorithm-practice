/** * Alipay.com Inc. * Copyright (c) 2004-2021 All Rights Reserved. */package study.erik.algorithm.leetcode.array;import org.junit.Assert;import org.junit.Test;import org.junit.runner.RunWith;import org.junit.runners.Parameterized;import org.junit.runners.Parameterized.Parameter;import org.junit.runners.Parameterized.Parameters;import study.erik.algorithm.util.ArrayUtils;import study.erik.algorithm.util.LetCodeCommit;/** * @author yueyi * @version : FindMinimumInRotatedSortedArray.java, v 0.1 2021年09月01日 12:33 上午 yueyi Exp $ */@RunWith(Parameterized.class)public class FindMinimumInRotatedSortedArray {    @LetCodeCommit(title = "Find Minimum in Rotated Sorted Array",            selfRemark = "这也太刺激了，一遍通过，而我还没有细想呢，全凭感觉呢；"                    + "但是还以为会很高效，结果很搞笑，只有9%和6%。"                    + "但是看了一下高赞答案，写法远没有我这个简练呀，搞不懂。深夜了睡觉")    public int findMin(int[] nums) {        int l = 0, h = nums.length - 1;        while (nums[l] > nums[h]) {            int m = l + (h - l) / 2;            if (nums[m] >= nums[l]) {                l = m + 1;            } else {                h = m;            }        }        return nums[l];    }    @Parameter    public int[] nums;    @Parameter(1)    public int   expect;    @Parameters    public static Object[][] data() {        return new Object[][] {                {ArrayUtils.buildArray("[3,4,5,1,2]"), 1},                {ArrayUtils.buildArray("[4,5,6,7,0,1,2]"), 0},                {ArrayUtils.buildArray("[11,13,15,17]"), 11},        };    }    @Test    public void test_() {        Assert.assertEquals(expect, findMin(nums));    }}