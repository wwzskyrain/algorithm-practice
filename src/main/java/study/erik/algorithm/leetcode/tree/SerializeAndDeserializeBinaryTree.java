/** * Alipay.com Inc. * Copyright (c) 2004-2021 All Rights Reserved. */package study.erik.algorithm.leetcode.tree;import org.junit.Test;import study.erik.algorithm.leetcode.util.TreeNode;import study.erik.algorithm.util.LetCodeCommit;import java.util.ArrayList;import java.util.Collections;import java.util.List;import java.util.stream.Collectors;/** * @author yueyi * @version : SerializeAndDeserializeBinaryTree.java, v 0.1 2021年10月24日 9:50 下午 yueyi Exp $ */public class SerializeAndDeserializeBinaryTree {    @LetCodeCommit(title = "Serialize and Deserialize Binary Tree",            selfRemark = "这是个hard的题目，我用了一个先序遍历解答。"                    + "还有一种解法使用括号来表示节点，用N表示空节点。"                    + "题目不难，就算了不再写另外一种方法了")    public String serialize(TreeNode root) {        List<String> ser = new ArrayList<>();        preOrder(root, ser);        return ser.stream().collect(Collectors.joining(","));    }    public void preOrder(TreeNode root, List<String> ser) {        if (root == null) {            ser.add("N");            return;        }        ser.add(String.valueOf(root.val));        preOrder(root.left, ser);        preOrder(root.right, ser);    }    public TreeNode deserialize(String data) {        String[] split = data.split(",");        return doDeserialize(split, new int[1]);    }    private TreeNode doDeserialize(String[] data, int[] index) {        String value = data[index[0]];        // 无论是空指针还是具体node，都要++；        index[0]++;        if ("N".equalsIgnoreCase(value)) {            return null;        }        TreeNode node = new TreeNode(Integer.parseInt(value));        node.left = doDeserialize(data, index);        node.right = doDeserialize(data, index);        return node;    }    @Test    public void test() {        TreeNode treeNode = TreeNode.buildTree("1,2,3,null,null,4,5");        String serialize = serialize(treeNode);        System.out.println(serialize);        TreeNode treeNode1 = deserialize(serialize);        System.out.println(treeNode1);    }}