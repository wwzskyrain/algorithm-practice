/**
 * Alipay.com Inc.
 * Copyright (c) 2004-2022 All Rights Reserved.
 */
package study.erik.algorithm.leetcode.hard;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameter;
import org.junit.runners.Parameterized.Parameters;
import study.erik.algorithm.util.ArrayUtils;
import study.erik.algorithm.util.LetCodeCommit;

import java.util.Arrays;

/**
 * @author yueyi
 * @version : PaintHouseIII.java, v 0.1 2022年07月10日 13:23 yueyi Exp $
 */
@RunWith(Parameterized.class)
public class PaintHouseIII {

    // Maximum cost possible plus 1
    final int MAX_COST = 1000001;

    @LetCodeCommit(title = "1473. Paint House III",
            diff = "h",
            selfRemark = "这个题目的难点在于，"
                    + "1.三维"
                    + "2.递归式公式逻辑多一点"
                    + "。"
                    + "其实这个题目也可以当做回溯法来写，但是却面临tle的问题，必须加备忘录."
                    + "我们刚才对这里的备忘录的使用产生了怀疑，认为是没有重复子空间，用备忘录没用。"
                    + "我们还写代码多了一下计数，结果发现确实有大量的重复计算，于是重新思考后才意识到重复子空间的存在.")
    public int minCost(int[] houses, int[][] cost, int m, int n, int target) {
        int[][][] memo = new int[m][target + 1][n];

        // Initialize memo array
        for (int i = 0; i < m; i++) {
            for (int j = 0; j <= target; j++) {
                Arrays.fill(memo[i][j], MAX_COST);
            }
        }

        // Initialize for house 0, neighborhoods will be 1
        for (int color = 1; color <= n; color++) {
            if (houses[0] == color) {
                // If the house has same color, no cost
                memo[0][1][color - 1] = 0;
            } else if (houses[0] == 0) {
                // If the house is not painted, assign the corresponding cost
                memo[0][1][color - 1] = cost[0][color - 1];
            }
        }

        for (int house = 1; house < m; house++) {
            for (int neighborhoods = 1; neighborhoods <= Math.min(target, house + 1); neighborhoods++) {
                for (int color = 1; color <= n; color++) {
                    // If the house is already painted, and color is different
                    if (houses[house] != 0 && color != houses[house]) {
                        // Cannot be painted with different color
                        continue;
                    }

                    int currCost = MAX_COST;
                    // Iterate over all the possible color for previous house
                    // 递归表达式.
                    // memo = dp[house][neighborhoods][prevColor] = min{
                    // case1: prevColor != color then dp[house-1][neighborhoods - 1][prevColor - 1],
                    // case2: prevColor == color then dp[house-1][neighborhoods][prevColor - 1]
                    // } + costToPaintThisHouse 。
                    // 其中 preColor = {1，2，3，...，n}
                    // 可见 dp[house][neighborhoods][prevColor] 是来自两个主要的case的。
                    // 而且

                    for (int prevColor = 1; prevColor <= n; prevColor++) {
                        if (prevColor != color) {
                            // Decrement the neighborhood as adjacent houses has different color
                            currCost = Math.min(currCost, memo[house - 1][neighborhoods - 1][prevColor - 1]);
                        } else {
                            // Previous house has the same color, no change in neighborhood count
                            currCost = Math.min(currCost, memo[house - 1][neighborhoods][color - 1]);
                        }
                    }

                    // If the house is already painted, cost to paint is 0
                    int costToPaint = houses[house] != 0 ? 0 : cost[house][color - 1];
                    memo[house][neighborhoods][color - 1] = currCost + costToPaint;
                }
            }
        }

        int minCost = MAX_COST;
        // Find the minimum cost with m houses and target neighborhoods
        // By comparing cost for different color for the last house
        for (int color = 1; color <= n; color++) {
            minCost = Math.min(minCost, memo[m - 1][target][color - 1]);
        }

        // Return -1 if the answer is MAX_COST as it implies no answer possible
        return minCost == MAX_COST ? -1 : minCost;
    }

    @Parameter
    public int[]   houses;
    @Parameter(1)
    public int[][] cost;
    @Parameter(2)
    public int     m;
    @Parameter(3)
    public int     n;
    @Parameter(4)
    public int     target;
    @Parameter(5)
    public int     expect;

    @Parameters
    public static Object[][] data() {
        return new Object[][] {
                {ArrayUtils.buildArray(
                        "[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
                                + "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]"),
                        ArrayUtils.buildArray2Dimension(
                                "[[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000],[10000,10000,"
                                        + "10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,"
                                        + "10000,10000,10000]]"),
                        100, 20, 100, 1000000},
                {ArrayUtils.buildArray("[0,0,0,0,0]"), ArrayUtils.buildArray2Dimension("[[1,10],[10,1],[10,1],[1,10],[5,1]]"),
                        5, 2, 3, 9},
                {ArrayUtils.buildArray("[0,2,1,2,0]"),
                        ArrayUtils.buildArray2Dimension("[[1,10],[10,1],[10,1],[1,10],[5,1]]"),
                        5, 2, 3, 11}
        };
    }

    @Test
    public void test_() {
        Assert.assertEquals(expect, minCost(houses, cost, m, n, target));
    }

}